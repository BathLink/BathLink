name: Test and Deploy CDK

on:
  workflow_dispatch:
  push:
    paths:
      - 'Backend/'
  pull_request:
    paths:
      - 'Backend/'

jobs:
  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            Backend/requirements.txt
            Backend/requirements-dev.txt

      - name: Install Dependencies
        run: |
          pip install -r Backend/requirements.txt
          pip install -r Backend/requirements-dev.txt

      - name: Run Unit Tests with Pytest
        run: pytest Backend/tests/unit --junitxml=results/unit-results.xml

      - name: Upload Unit Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-results
          path: results/unit-results.xml

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Synthesize CloudFormation Template
        run: |
          cd Backend/cdk
          cdk synth
        shell: bash

      - name: Run Local API with SAM
        run: | 
          cd Backend/cdk
          sam local start-api -t cdk.out/CdkStack.template.json/ &
          sleep 10
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2

      - name: Run API Tests
        run: |
          pytest Backend/tests/integration --junitxml=results/integration-results.xml

      - name: Upload Integration Results
        uses: actions/upload-artifact@v4
        with:
          name: integration-results
          path: results/integration-results.xml

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "results/*.xml"
        if: always()


  deploy:
    name: Deploy CDK
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            Backend/requirements.txt
            Backend/requirements-dev.txt

      - name: Install Dependencies
        run: |
          pip install -r Backend/requirements.txt
          pip install -r Backend/requirements-dev.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Deploy CDK Stack
        run: |
          cd Backend/cdk
          cdk deploy --require-approval never

  e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: |
            Backend/requirements.txt
            Backend/requirements-dev.txt

      - name: Install Dependencies
        run: |
          pip install -r Backend/requirements.txt
          pip install -r Backend/requirements-dev.txt

      - name: Run E2E Tests
        run: |
          pytest Backend/tests/e2e --junitxml=results/e2e-results.xml

      - name: Upload Integration Results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results
          path: results/e2e-results.xml
